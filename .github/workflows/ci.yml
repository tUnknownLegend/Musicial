name: build
on: [push]

jobs:
  build:

    name: ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Clone GTest
        run:  git clone https://github.com/google/googletest.git -b release-1.10.0
      - name: Install gtest manually
        working-directory: ./googletest
        run:  sudo apt install python3-pip &&
              cmake . &&
              make &&
              sudo make install

      - name: Install GTest
        run: sudo apt-get install libgtest-dev -y 
        
      - name: Install Clang-tidy
        run: sudo apt-get install -y clang-tidy

      - name: Install Scan-build  
        run: sudo apt-get install -y clang-tools

      - name: Install cppcheck
        run: sudo apt update && sudo apt install cppcheck
 
      - name: Install Cpplint
        run: sudo apt-get install python3-pip && pip install --user cpplint

      - name: install fbinfer
        run: VERSION=1.1.0; curl -sSL "https://github.com/facebook/infer/releases/download/v$VERSION/infer-linux64-v$VERSION.tar.xz" | sudo tar -C /opt -xJ && sudo ln -s "/opt/infer-linux64-v$VERSION/bin/infer" /usr/local/bin/infer
        
      - name: Valgrind install
        run: sudo apt-get update && sudo apt-get install -y valgrind 

      - name: build
        run: cd ./qt/lib && bash ./st.bash  

      - name: Valgrind 
        run: cd ./qt/lib/build && valgrind --tool=memcheck --leak-check=yes --error-exitcode=1 ./Musicial_test

      - name: linters
        run: cd qt/lib/linters && bash run.sh

      - name: linters QT
        run: cd qt/linters && cpplint --extensions=cpp, ../*.cpp * ../*.h && bash run.sh

      - name: pre Coveralls
        run: cd qt/lib//build lcov -t "tests/test_IT1" -o coverage.info -c -d src/ && genhtml -o report coverage.info   

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./qt/lib//build/coverage.info  
